# 5-text_indentation.txt

===============================
How to Use 5-text_indentation.py
===============================

This module defines a function ``text_indentation(text)``.

Usage
=====

``text_indentation(...)`` prints the given text with 2 new lines after each of
these characters: `.`, `?`, and `:`.

::

    >>> text_indentation = __import__('5-text_indentation').text_indentation
    >>> text_indentation("Hello. How are you? I'm fine: thanks.")
    Hello.
    <BLANKLINE>
    How are you?
    <BLANKLINE>
    I'm fine:
    <BLANKLINE>
    thanks.
    <BLANKLINE>

No spaces are printed at the beginning or end of each printed line:

::

    >>> text_indentation("  Spaces.  ")
    Spaces.
    <BLANKLINE>

::

    >>> text_indentation("No punctuation")
    No punctuation

Multiple spaces between words are reduced to a single space:

::

    >>> text_indentation("Hello.   World?   ")
    Hello.
    <BLANKLINE>
    World?
    <BLANKLINE>

Invalid Input
=============

The paramter ``text`` must be a string. Otherwise, a TypeError is raised.

::

    >>> text_indentation(7)
    Traceback (most recent call last):
    TypeError: text must be a string

::

    >>> text_indentation({"hello": "world"})
    Traceback (most recent call last):
    TypeError: text must be a string

::

    >>> text_indentation(None)
    Traceback (most recent call last):
    TypeError: text must be a string# 5-text_indentation.txt

===============================
How to Use 5-text_indentation.py
===============================

This module defines a function ``text_indentation(text)``.

Usage
=====

``text_indentation(...)`` prints the given text with 2 new lines after each of
these characters: `.`, `?`, and `:`.

::

    >>> text_indentation = __import__('5-text_indentation').text_indentation
    >>> text_indentation("Hello. How are you? I'm fine: thanks.")
    Hello.
    <BLANKLINE>
    How are you?
    <BLANKLINE>
    I'm fine:
    <BLANKLINE>
    thanks.
    <BLANKLINE>

No spaces are printed at the beginning or end of each printed line:

::

    >>> text_indentation("  Spaces.  ")
    Spaces.
    <BLANKLINE>

::

    >>> text_indentation("No punctuation")
    No punctuation

Multiple spaces between words are reduced to a single space:

::

    >>> text_indentation("Hello.   World?   ")
    Hello.
    <BLANKLINE>
    World?
    <BLANKLINE>

Invalid Input
=============

The paramter ``text`` must be a string. Otherwise, a TypeError is raised.

::

    >>> text_indentation(7)
    Traceback (most recent call last):
    TypeError: text must be a string

::

    >>> text_indentation({"hello": "world"})
    Traceback (most recent call last):
    TypeError: text must be a string

::

    >>> text_indentation(None)
    Traceback (most recent call last):
    TypeError: text must be a string
