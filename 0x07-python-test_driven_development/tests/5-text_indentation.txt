# 5-text_indentation.txt

===========================
How to Use 5-text_indentation.py
===========================

This module defines a text-indenting function ``text_indentation(text)``.

Usage
=====

Text is printed with two new lines after each of the characters ``.``, ``?``,
and ``:``.

::

    >>> text_indentation = __import__('5-text_indentation').text_indentation
    >>> text_indentation("Hello. How are you? I'm fine: thanks.")
    Hello.
    <BLANKLINE>
    How are you?
    <BLANKLINE>
    I'm fine:
    <BLANKLINE>
    thanks.

No spaces are printed at the beginning or end of lines:

::

    >>> text_indentation("   Spaces.   ")
    Spaces.
    <BLANKLINE>

::

    >>> text_indentation("  Start.  End.  ")
    Start.
    <BLANKLINE>
    End.
    <BLANKLINE>

New lines are only printed for the characters ``.``, ``?``, and ``:`` -
text not ending with these characters is not ended with a new line:

::

    >>> text_indentation("No ending punctuation")
    No ending punctuation

New lines within a string are printed as normal:

::

    >>> text_indentation("Line 1\nLine 2")
    Line 1
    Line 2

::

    >>> text_indentation("\n\n\n We just printed three new lines.")
    <BLANKLINE>
    <BLANKLINE>
    <BLANKLINE>
    We just printed three new lines.
    <BLANKLINE>

::

    >>> text_indentation("A sneaky \n new line.")
    A sneaky 
    new line.
    <BLANKLINE>

Invalid Text
============

The paramter ``text`` must be a string. Otherwise, a TypeError is raised.

::

    >>> text_indentation(7)
    Traceback (most recent call last):
    TypeError: text must be a string

::

    >>> text_indentation({"one": 1, "two": 2})
    Traceback (most recent call last):
    TypeError: text must be a string

::

    >>> text_indentation(None)
    Traceback (most recent call last):
    TypeError: text must be a string
